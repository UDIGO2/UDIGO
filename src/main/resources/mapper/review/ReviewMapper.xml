<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.udigo.hotel.review.dao.ReviewMapper">

    <select id="findReviewsByMember" resultType="com.udigo.hotel.review.dto.ReviewDTO">
        /* ReviewMapper.findReviewsByMember */
        SELECT
            r.review_id,
            r.member_code,
            r.acm_id,
            r.resv_id,
            r.content,
            r.written_at,
            r.re_photo1,
            r.re_photo2,
            r.re_photo3,
            a.acm_name
        FROM
            tbl_reviews r
                LEFT JOIN tbl_acm a ON r.acm_id = a.acm_id
        WHERE
            r.member_code = #{memberCode}
        ORDER BY
            r.written_at DESC
    </select>

    <select id="findReviewsByWrite" resultType="com.udigo.hotel.review.dto.ReviewDTO">
        /* ReviewMapper.findReviewsByWrite */
        SELECT
            b.resv_id,
            b.member_code,
            b.acm_id,
            a.acm_name,
            a.acm_price,
            b.check_in,
            b.check_out,
            b.guest_count,
            a.acm_photo1
        FROM
            tbl_reservations b
            JOIN tbl_acm a ON b.acm_id = a.acm_id
        WHERE
            b.resv_id = #{resvId}
            AND b.acm_id = #{acmId}
    </select>

    <delete id="deleteReview">
        /* ReviewMapper.deleteReview */
        DELETE FROM tbl_reviews
        WHERE review_id = #{reviewId}
          AND member_code = #{memberCode}
    </delete>

    <!--  파일 업로드 DML 구문  -->
    <insert id="insertReview" parameterType="com.udigo.hotel.review.dto.ReviewDTO">
        INSERT INTO tbl_reviews (
            review_id,
            member_code,
            acm_id,
            resv_id,
            content,
            written_at,
            re_photo1,
            re_photo2,
            re_photo3
        )
        VALUES (
                   0,
                   #{memberCode},
                   #{acmId},
                   #{resvId},
                   #{content},
                   NOW(),
                   #{rePhoto1},
                   #{rePhoto2},
                   #{rePhoto3}
               )
    </insert>

    <!-- 관리자용 전체 리뷰 조회 (페이징) -->
    <select id="findAllReviews" resultType="com.udigo.hotel.review.dto.ReviewDTO">
        SELECT 
            r.review_id,
            r.member_code,
            r.acm_id,
            r.content,
            r.written_at,
            r.re_photo1,
            r.re_photo2,
            r.re_photo3,
            a.acm_name,
            m.member_name
        FROM 
            tbl_reviews r
            JOIN tbl_acm a ON r.acm_id = a.acm_id
            JOIN tbl_member m ON r.member_code = m.member_code
        ORDER BY r.written_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 전체 리뷰 수 조회 -->
    <select id="getTotalReviewCount" resultType="int">
        SELECT COUNT(*) FROM tbl_reviews
    </select>

    <!-- 관리자용 리뷰 삭제 -->
    <delete id="deleteReviewByAdmin">
        DELETE FROM tbl_reviews WHERE review_id = #{reviewId}
    </delete>

    <!-- 숙소별 후기 조회 -->
    <select id="findReviewsByAcmId" resultType="com.udigo.hotel.review.dto.ReviewDTO">
        SELECT r.*, m.member_name
        FROM tbl_reviews r
        JOIN tbl_member m ON r.member_code = m.member_code
        WHERE r.acm_id = #{acmId}
        ORDER BY r.written_at DESC
    </select>

    <!-- 이미지 URL 업데이트 -->
    <update id="updateImageUrls">
        UPDATE tbl_reviews
        SET re_photo1 = CASE 
            WHEN re_photo1 IS NOT NULL AND re_photo1 != '' AND re_photo1 NOT LIKE '/%' 
            THEN CONCAT('/image/review/', re_photo1)
            ELSE re_photo1
            END,
            re_photo2 = CASE 
            WHEN re_photo2 IS NOT NULL AND re_photo2 != '' AND re_photo2 NOT LIKE '/%' 
            THEN CONCAT('/image/review/', re_photo2)
            ELSE re_photo2
            END,
            re_photo3 = CASE 
            WHEN re_photo3 IS NOT NULL AND re_photo3 != '' AND re_photo3 NOT LIKE '/%' 
            THEN CONCAT('/image/review/', re_photo3)
            ELSE re_photo3
            END
    </update>
</mapper>